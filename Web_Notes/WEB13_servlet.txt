param：参数；
Attribute:特性；
Resouces:资源；
parameter:指标参数；
config：配置；
param：参数；
protected:受保护的；
annotated:有注释的；
Templates:模板文件;
Configuration：组态，配置；
appendix：追加；
combo：光驱类型；

JavaWeb核心之Servlet

Servlet运行在服务端的java小程序，是sun公司提供的一套规范，用来处理客户端请求、响应给浏览器的动态资源。但servlet的实质就是java代码，通过java的API动态的向客户端输出内容。

就是一个接口；
servlet规范：包含三个技术点
1）servlet技术
2）filter技术---过滤器
3）listener技术---监听器


Servlet快速入门
实现步骤：
1)创建类实现Servlet接口；
2）覆盖尚未实现的方法---service方法
3）在web.xml进行servlet的配置


(1)Servlet接口中的方法
init何时执行：servlet对象创建的时候执行
ServletConfig:代表的是该servlet对象的配置信息；
1.获得servlet的name
String servletName = config.getServletName（）；
2.获得servlet的初始化的一些参数；
3.获得Servletcontext对象；


service何时执行：每次请求都会执行
ServletRequest：代表请求 认为ServletRequest内部封装的是http请求的信息；
servletResponse:代表响应 认为要封装的是响应的信息；

destroy何时执行：Servlet销毁的时候执行；


Servlce何时创建：默认第一次访问servlet时创建该对象；
Servlet何时销毁：服务器关闭servlet就销毁了；



servlet每次访问必然执行的方法：service方法；（记住参数）


客户端
http//


服务器端
Tomcat服务器
Tomcat引擎
1.解析请求的资源地址
2.创建servlet对象；
3.创建代表请求的request对象和代表响应的response对象；
每次访问service方法都会创建一对新的request和response对象；


数据库



一.Servlet的基本配置
其中url-patternde的配置方式
1）完全匹配 访问的资源与配置的资源完全相同才能访问到
2)目录匹配 格式：/虚拟的路径../*  *代表任意；
3）扩展名匹配 格式：*.扩展名
注意：第二种与第三种不要混用；


二.服务器启动实例化Servlet配置
Servlet的何时创建：默认第一次访问时创建；
为什么是默认？ 
当在servlet的配置时 加上一个配置<load-on-startup>(在启动时加载) servlet对象在服务器启动时就创建；
数字代表优先级 数字越小 优先级越高；



三.缺省servlet
可以将url-pattern配置成一个/,代表该servlet是缺省的servlet；
什么是缺省的servlet？
当你访问的资源地址所有的servlet都不匹配时，缺省的servlet负责处理；


其实，web应用中所有的资源的响应都是servlet负责，包括静态资源；


注意：tomcat中有全局的web.xml文件，当自己配置的xml文件与全局的发生冲突时，就近原则，使用自己的；

当自己配置的xml文件有缺省，找自己的servlet-Class;
当自己配置的xml文件没有缺省，并且文件名在xml中找不到，去tomcat中全局的web.xml中找缺省，对应的servlet-Class中的DefaultServlet去找自己写的html文件，并逐行write；


四.欢迎页面；
<welcome-file-list>从上到下优先执行；
自己没有配，找tomcat全局xml文件；





ServletContext对象 （上下文）


ServletContext代表是一个web应用的环境（上下文）对象，ServletContext对象内部封装是该web应用的信息，ServletContext对象一个web应用只有一个

问题：一个web应用有几个servle对象？----多个；


ServletContest对象的生命周期？
创建：该web应用被加载；（服务器启动或发布web应用（前提，服务器启动转态））
销毁：web应用被卸载；（服务器关闭，移除web应用）


获取ServletContext的方法
1）ServletContext ServletContext = config.getServletContext();(这种方法一般不用）
2) ServletContext servletContext = this.getServletContext();


ServletContext的作用
（1）获得web应用全局初始化参数；
web.xml中配置初始化参数；
配置全局的初始化参数；
通过context对象获取参数；

（2）获得web应用中任何资源的绝对路径 重要 重要 重要
方法：String path= context.getRealPath(相对于该web应用的相对路径）
获得a，b，c，d的绝对路径；


注意：WEB-INF浏览器不能直接访问，代码可以；
//在读取src（classes）下的资源是可以同类的加载器-----专门加载classes下的文件的；
getResource（参数是一个相对地址，相对classes）
web中正斜杠和反斜杠都是一样的\/


(3)ServletContext是一个域对象（重要，重要 ，重要）
什么是域对象？什么是域？
存储数据的区域就是域对象；
ServletContext域对象的作用范围：整个web应用（所有的web资源都可以随意向servletContext域中存取数据，数据可以共享）；
//3.域对象----向servletContext中存储数据；


域对象的通用的方法；
setAttribute（String name，Object obj），getAttribute（String name）方法；

removeAttribute（String name）；














