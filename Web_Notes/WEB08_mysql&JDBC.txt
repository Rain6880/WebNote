web08
================================================================================
CRUD:增删改查(create/read/update/delete)
create：新增项目
read：查询
update：修改
delete：删除

desc 表名：查看表结构
drop：删除表
primary key :主键

modify：修改（修改表中列的类型和长度）

decimal：泛型型
blob：字节类型
timestamp:时间戳

truncate：摧毁（彻底删除表格）
transaction：事物，业务
rollback：反转，回滚

connectivity：连通，连接
statement：语句（执行语句）
concur：共同作用，同时发生

preparedStatement：预编译声明
distinct：（去掉重复）
count：计数

connector:连接器
register：注册，登记
driver：驱动器

database:数据库
start：开始
insert：插入
unique：唯一
category：分类
truncate：摧毁（彻底删除表）
resultSet：结果集
release：释放
template：模板
printStackTrace:打印堆栈信息

==================================================================================
web09
order:订单
constraint:(强制)约束
foreign key：外键
references：指向
orderitem：订单项
join：加入
resourceBundle：资源捆绑
classLoader：类加载器
properties：属性
inputstream:输入流


回顾mysql，JDBC
数据库对应一个应用系统（OA，ERP^)
在系统中有很多功能，每个功能可能涉及到一些对象（类），此时，每一个类对应于数据库中的一张表


这个类对应数据库中的表
在类中有很多属性
数据库管理系统（BDMS）


打开window“服务”
win+r， “运行”----services.msc
net start mysql

SQL分类
1.数据定义语言：DDL，用来定义数据库对象：数据库dasebase，表table,列column。关键字：创建create，修改alter，删除drop等（结构）
2.数据操作语言：DML，用来对数据库中的记录进行更新。关键字：插入insert，删除delete，更新update等（数据）
3.数据查询语言：DQL，用来查询数据库中表的记录。关键字：select，from，where等。
4.数据控制语言：DCL，用来定义数据库的访问权限和安全级别，及创建用户，关键字：grant等；



一.对数据库的操作
1、创建一个库
create database库名
创建带有编码的
create database库名 character set 编码
查看编码
show create database库名
2、删除一个库
drop database 库名
3.使用库
use 库名
4.查看当前正在使用的库
select database（）


二、对数据库表的操作；
1、创建一张表
Create table 表名（
字段名 类型（长度）【约束】，
字段名 类型（长度）【约束】，
字段名 类型（长度）【约束】，
）
2、查看数据库表
创建完成后，我们可以查看数据库表
show tables；
查看表的结构
desc 表名
3.删除一张表
Drop table 表名

4.修改表
4.1 添加一列
alter table表名 add字段名 类型（长度）[约束]
not null非空
4.2修改列的类型（长度、约束）
alter table表名 modify 要修改的字段名 类型（长度）[约束]
4.3修改列的列名
Alter table 表名 change 旧列名 新列名 类型（长度）【约束】
4.4删除表的列
Alter table 表名drop 列名
4.5修改表名
Rename table 表名 to 新表名
4.6修改表的字符集
Alter table表名character set编码
Alter table表名character set gbk

查看当前表的编码
show create table （表名）



字段类型
整数类型：int（integer）普通大小的整数 4个字节

小数类型：double（m，d）双精度浮点数 8个字节
          decimal泛型型 压缩严格的定点数 m+2个字节（金额、钱数）
日期类型：datetime 8个字节
          timestamp 4个字节
文本、二进制类型：VARCHAR(M) M为0~65535之间的整数，值得长度加一个字节。占L+1个字节。L小于等于M；


三、对数据库记录进行操作(修改）
1.插入记录
insert into表名（列名1，列名2，列名3……）values（值1，值2，值3……）
insert into 表名 values（值1，值2，值3……）

插入数据中文乱码问题
方式一【不建议！】
直接修改数据库安装目录里面my.ini文件的第57行
57 default-character-set=utf8
方式二：
set names gbk；

select*from 表名
查询表格


2.修改表记录
2.1不带条件的（不带条件，它会将该列所有的记录都更改）
update表名 set 字段名=值，字段名=值……

2.2带条件的
update表名 set 字段名=值，字段名=值……where 条件

3.3面试题
说说delete与truncate的区别？
Delete删除的时候是一条一条的删除记录，它配合事务，可以将删除的数据找回（rollback回退）；
truncate删除，它将整个表格摧毁，然后再创建一张一模一样的表；它删除的数据无法找回。

注意：delete删除，uid不会重置！而使用truncate操作，uid会重置
因为truncate删除了表的结构，然后创建离一张一模一样的表，所以再次插入数据的时候从1开始；




4.查询操作
语法：
select [distinct] *|列名，列名 from表名 [where条件]


4.1简单查询
1.查询所有商品
select*from product；
2.查询商品名和商品价格
Select pname，price from product；
3.查询所有商品信息使用表别名
select*from product as p；
4.查询商品名，使用列别名
Select pname as p from product
5.出掉重复的值（按照价格）
Select distinct（price） from product；
先准备数据：
6.将所有的商品价格+10进行显示
select pname， price+10 from product；


4.2条件查询
1.查询商品名称为“左慈”的商品信息
select*from product where pname=“左慈”；
2.查询价格>60元的所有商品信息
       ……where price>60;
3.查询商品名称含有“士”子的商品信息
select*from product where pname like'%士%'；
*like使用占位符_和%   _代一个字符 %代表任意个字符；
4.查询商品id在（3,6,9）范围内的所有商品信息；
        ……where pid in（3,6,9）；
5.查询商品名称含有“士”字并且id为6的商品信息
select*from product where pname like'%士%' and pid=6；
6.查询id为2或者6的商品信息；
              ……where pid=2 or pid=6；



4.3排序
1.查询所有的商品，按价格进行排序（升序，降序）
select*from product order by price asc；升序
select*from product order by price desc；降序
2.查询名称有“士”的商品信息并且按照价格降序排列
select*from product where pname like '士' order by price desc；


4.4聚合函数
1.获取所有商品的价格的总和；
select sum（price） from product；
2.获取所有商品的平均价格
select avg（price） from product；
3.获取所有商品的个数；
select count（*）from product；
注意：聚合函数不统计null值


4.5分组
初始化数据
update product set cid='1';
update product set cid='2' where pid in(5,6,7);
1.根据cid字段分组，分组后统计商品的个数；
select cid ，count（*） from product group by cid；
2.根据cid分组，分组统计每组商品的平均价格，并且平均价格大于20000元
select cid,avg(price) from product group by cid having avg(price)>20000;
注意：分组之后，不能使用where，要使用having；


4.6查询总结
select   *|字段...，一般在后面的内容都是要查询的字段；
From  表
where 查询条件
group by 分组查询
having 分组条件，分组后使用条件只能使用having
order by排序字段 asc|desc


JDBC开发步骤
1.注册驱动
2.获取连接
3.获得语句执行者
4.执行sql语句
5.处理结果
6.释放资源

1.注册驱动，两种方法；
JDBC规范定义的驱动接口：java.sql.Driver,
mysql驱动提供的实现类：com.mysql.jdbc.Driver;
方法二，DriverManager工具类，提供注册驱动方法registerDriver（）一般不推荐使用，硬编码，驱动被注册了两次；
注意：只有Driver在mysql.jdbc包中，其它的都在java.sql包中


2.获取连接
获取连接需要方法DriverManager.getConnection(url,username,password);
下面是mysql的url：
jdbc：mysql：//localhost:3306/mysql



3.获取语句执行
String sql=“………………”；
Statement语句执行者代码：statement stmt = con.createStatement();
执行sql语句：
int executeUpdate(Sting sql);--执行insert update delete语句（DML语句）
ResultSet executeQuery（String sql）；--执行select语句（DQL语句）
boolean execute(string sql);--执行select返回true执行其他的语句返回false；
   --如果返回true，需要使用getResultSet（）获取查询结果；
   --如果返回false，需要使用getUpdateCount（）获得影响行数；
存在sql注入问题



4.处理结果集
在ResultSet类中提供了一系列的getXXX（），比较常用的方法有：
Object getObject（int col），获取任意对象
String getString（int col），获取字符串；
int getInt(int col)，获取整形；
double getDouble(int col),获取双精度浮点数；



5.释放资源;  最先得到的后关闭,后得到的先关闭；
rs.close();
stmt.close();
con.close();


防止注入攻击
1.过滤用户输入的数据是否包含非法字符；
2.分布校验！先使用用户名来查询，如果查到了，再比较密码；
3.使用PreparedStatement；
PreparedStatement叫预编译声明；
PreparedStatement是Statement的子接口；



能够使用Limit关键字进行查询操作
a.说出limit关键字两个参数的含义（limit 2,2）第一个参数：起始位置，（要查询第几页―1）乘以第二个参数；
第二个参数：每页显示的数目；

查询第三页，每页显示3条代码：
select*from product limit 6,3；





