web08
================================================================================
CRUD:增删改查(create/read/update/delete)
create：新增项目
read：查询
update：修改
delete：删除

desc 表名：查看表结构
drop：删除表
primary key :主键

modify：修改（修改表中列的类型和长度）

decimal：泛型型
blob：字节类型
timestamp:时间戳

truncate：摧毁（彻底删除表格）
transaction：事物，业务
rollback：反转，回滚

connectivity：连通，连接
statement：语句（执行语句）
concur：共同作用，同时发生

preparedStatement：预编译声明
distinct：（去掉重复）
count：计数

connector:连接器
register：注册，登记
driver：驱动器

database:数据库
start：开始
insert：插入
unique：唯一
category：分类
truncate：摧毁（彻底删除表）
resultSet：结果集
release：释放
template：模板

==================================================================================
web09
order:订单
constraint:(强制)约束
foreign key：外键
references：指向
orderitem：订单项
join：加入
resourceBundle：资源捆绑
classLoader：类加载器
properties：属性
inputstream:输入流
unique：唯一




建表语句:
分页操作：使用limit(参数1，参数2)
	起始位置(参数1)=(第几页-1)*每页显示的条数(参数2)
	
1.分类表
create table category(
	cid varchar(32) primary key,
	cname varchar(100)
);

2.商品表
create table product(
	pid varchar(32) primary key,
	pname varchar(40),
	price double,
	category_id varchar(32)
);

alter table product add foreign key(category_id) references category(cid);


3.添加外键列
alter table product add category_id varchar(32);

4.添加约束
alter table product add constraint product_fk foreign key(category_id) references category(cid);

5.订单表
create table orders(
	oid varchar(32) primary key,
	totalprice double
);

6.订单项表
create table orderitem(
	oid varchar(50),
	pid varchar(50)
);

7.联合主键
alter table orderitem add primary key(oid,pid);

8.订单表和订单项表的主外键关系
alter table orderitem add constraint orderitem_orders_fk foreign key(oid) references orders(oid);

9.商品表和订单项表的主外键关系
alter table orderitem add constraint orderitem_product_fk foreign key(pid) references product(pid);



insert into category(cid,cname) values('c001','家电');
insert into category(cid,cname) values('c002','服饰');
insert into category(cid,cname) values('c003','化妆品');

insert into product(pid,pname,price,category_id) values('p001','联想','5000','c001');
insert into product(pid,pname,price,category_id) values('p002','海尔','5000','c001');
insert into product(pid,pname,price,category_id) values('p003','雷神','5000','c001');

insert into product(pid,pname,price,category_id) values('p004','JACK JONES','800','c002');
insert into product(pid,pname,price,category_id) values('p005','真维斯','200','c002');
insert into product(pid,pname,price,category_id) values('p006','花花公子','440','c002');
insert into product(pid,pname,price,category_id) values('p007','劲霸','2000','c002');

insert into product(pid,pname,price,category_id) values('p008','香奈儿','800','c003');
insert into product(pid,pname,price,category_id) values('p009','相宜本草','200','c003');



声明外键约束
1.从orderitem到product的关系
alter table orderitem add foreign key(pid) references product(pid);

2.从orderitem到orders的关系



Mysql多表
外键的介绍：
“分类表category”称为：主表，“cid”我们称为主键。“商品表products”称为：从表，category_id称为外键。
语法：alter table 从表 add[constraint][外键名称] foreign key (从表外键字段名）references 主表（主表的主键);
代码：
alter table product add foreign key(category_id) references category(cid);
解除主从表的关系：
alter table product drop[constraint][外键名称] foreign key category_id;
先删除从表中额对象，再删除主表中指向的对象；
注意事项：
1.从表外键不能添加、主表中不存在的记录。
2.主表不能删除，从表中已经引用的记录。



一对多建表原则：在多的一方创建一个字段，字段作为外键指向一的一方的主键。


多对多关系建表原则：需要创建第三张表,中间表至少两个字段，这两个字段分别作为外键指向各自一方的主键。
alter table 从表（stu_course）add foreign key(sno) references stu(sid);
alter table 从表（stu_course）add foreign key(cno) references course(cid);


一对一建表原则：主键对应；unique唯一；
外键唯一：主表的主键和从表的外键（唯一），形成主外键关系，外键唯一unique；
外键是主键：主表的主键和从表的主键，形成主外键关系；


primary key主键,多对多代码；
alter table orderiten  add constraint orderiten_fk foreign key(oid) references orders(oid);
alter table orderiten  add constraint orderiten_fk foreign key(pid) references product(pid);



多表查询的三种方式：
1.交叉连接查询（基本不会使用-得到的是两个表的乘积）
语法：select*from A,B；

2.内连接查询（使用的关键字inner join --inner可以省略）
隐式内连接：select*from A,B where条件；
select*from category,products where cid = category_id;
显示内连接：select*from A inner join B on 条件；
select*from category c,product p where c.cid = p.category_id;

3.外连接查询（使用关键字outer join--outer可以省略）
左外连接：left outer join
select*from A left outer join B on 条件；
右外连接：right outer join
select*from A right outer join B on 条件；
select*from category right join product on cid=category_id;

左外连接：左表全部及两个表的交集；
内连接：查询两个表的交集；
右外连接：查询的是右边表的全部及两个表的交集；



子查询：一条select语句结果作为另一条select语法的一部分（查询条件，查询结果，表等）
代码：select*from product where categorey_id = (select cid from category where cname = ‘化妆品’）；

1.加载配置文件：ResourceBundle对象
使用JDK提供的工具类ResourceBundle加载Properties文件，ResourceBundle提供getBundle（）方法用于只提供properties文件即可，之后使用getString（key）通过key获得value的值；
不需要加后缀；

2.应对properties文件处理，开发中也会使用Properties对象进行，采用加载1properties文件获得流，然后使用Properties对象进行处理；
注意：使用ResourceBundle对象配置文件不需要后缀名；使用properties对象，配置文件需要后缀名；

mysql启动服务：net start mysql
登录mysql：mysql -uroot -p123
停止mysql：net stop mysql


