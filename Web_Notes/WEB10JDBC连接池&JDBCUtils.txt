web08
================================================================================
CRUD:增删改查(create/read/update/delete)
create：新增项目
read：查询
update：修改
delete：删除

desc 表名：查看表结构
drop：删除表
primary key :主键

modify：修改（修改表中列的类型和长度）

decimal：泛型型
blob：字节类型
timestamp:时间戳

truncate：摧毁（彻底删除表格）
transaction：事物，业务
rollback：反转，回滚

connectivity：连通，连接
statement：语句（执行语句）
concur：共同作用，同时发生

preparedStatement：预编译声明
distinct：（去掉重复）
count：计数

connector:连接器
register：注册，登记
driver：驱动器

database:数据库
start：开始
insert：插入
unique：唯一
category：分类
truncate：摧毁（彻底删除表）
resultSet：结果集
release：释放
template：模板

==================================================================================
web09
order:订单
constraint:(强制)约束
foreign key：外键
references：指向
orderitem：订单项
join：加入
resourceBundle：资源捆绑
classLoader：类加载器
properties：属性
inputstream:输入流


 使用连接池重写工具类
实际开发中“获取连接”或“释放资源”是非常消耗资源的两个过程，为了解决此类性能问题，采用连接池技术，来共享connection；


java为数据库连接池提供了公共的接口：javax.sql.DataSource;
常见的连接池：DBCP、C3P0、
创建连接池实现（数据源），并实现接口javax.sql.DataSource,使用该接口中的方法getConnection（）方法；
提供一个集合，选择LinkedList，
当用户使用完连接，释放资源时，不执行close（）方法，而是将连接添加到连接池中。

装饰者设计模式
连接池代码实现改进（增强close方法）
注意：PreparedStatement方法必须覆盖，返回值return con.prepareStatement(sql);




除了自定义连接池，其它的外置的连接池；
1.C3P0开源免费的连接池，开源框架有Spring、Hibernate等，需要导入C3P0jar包；

配置文件名称：c3p0-config.xml(固定）
配置文件有两种加载默认配置文件和定义名称的配置文件。



2.DBCP也是一个开源的连接池；需要导入commons-dbcp；commons-pool两个jar包；
配置文件内容：properties不能编写中文，不支持STS中修改，必须使用记事本修改内容，否则中文注释就乱码了。
注意：DBCP需要导入两个jar包，commons-dbcp和pool；


3.在增加、删除、修改等操作中有很多相同的代码，只有少部分不同；对于那些不同的地方，我们使用传参的方式；
DBUtils就是JDBC的简化开发工具。需要使用技术：连接池（获得连接），SQL语句都没有少；需要导入commons-dputils.jar包；


JavaBean组件
JavaBean就是一个类，在开发中常用于封装数据，如下特性；
1.需要实现接口：java.io.Serializable,通常偷懒省略了。
2.提供私有字段？private类型 字段名；
3.提供getter/setter方法；
4.提供无参构造；

JavaBean包后缀名domain


DBUtils完成CRUD
概述
QueryRunner中提供了对sql语句操作的API；
ResultSetHandler接口，用于定义select操作后，怎样封装结果集；
DBUtils类，它就是一个工具类，定义了关闭资源与实务处理的方法；


QueryRunner核心类

ResultSetHandler结果集处理类
1.BeanHandler：将结果集中第一条记录封装到一个指定的javaBean中；
2.BeanListHandler将结果集中每一条记录封装到指定的JavaBean中，将这些JavaBean再封装到list集合中；
3.ScalarHandler：它是用于单数据。例如select count（*）from表操作；

Map处理器，Bean处理器，Column处理器，Scalar处理器；
































