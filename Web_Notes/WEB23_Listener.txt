1.什么是监听器
监听器相关概念：
事件源：被监听的对象 -----三个域对象 request session servletContext
监听器：监听事件源对象 事件源对象的状态的变化都会触发监听器
注册监听器：将监听器与事件源进行绑定
响应行为：监听器监听到事件源的状态变化时 所涉及的功能代码----程序员编写代码


2.监听器有哪些？
第一维度：按照被监听的对象划分：ServletRequest域 HTTPSession域 Servletcontext域
第二维度：安装监听的内容分：监听域对象的创建与销毁的  监听域对象的属性变化的



域对象的创建与销毁   ServletContextListener       .....

域对象的属性的变化   ServletContextAttributeListener  .....

3．监听三大域对象的创建与销毁的监听器
(1)监听ServletContext域的创建与销毁的监听器ServletContextListener
1）Servlet域的生命周期
何时创建：服务器启动创建
何时销毁：服务器关闭销毁

2）监听器的编写步骤（重点）：
a、编写一个监听器类去实现监听器接口
b、覆盖监听器的方法
c、需要在web.xml中进行配置---注册

3）监听的方法：


需要在web.xml中注册监听器

5）ServletContextListener监听器的主要作用
a、初始化的工作：初始化对象 初始化数据 ---- 加载数据库驱动  连接池的初始化
b、加载一些初始化的配置文件 --- spring的配置文件
c、任务调度----定时器----Timer/TimerTask



4.监听三大域对象的属性变化


5．与session中的绑定的对象相关的监听器（对象感知监听器）//不需要在web.xml中进行配置
(1)即将要被绑定到session中的对象有几种状态
绑定状态：就一个对象被放到session域中
解绑状态：就是这个对象从session域中移除了
钝化状态：是将session内存中的对象持久化（序列化）到磁盘
活化状态：就是将磁盘上的对象再次恢复到session内存中

面试题：当用户很对时，怎样对服务器进行优化？
(2)绑定与解绑的监听器HttpSessionBindingListener


(3)钝化与活化的监听器HttpSessionActivationListener
可以通过配置文件 指定对象钝化时间 --- 对象多长时间不用被钝化
在META-INF下创建一个context.xml


//注册给即将绑定到session中的对象用的；


面试题：当用户很多时，怎么对服务器进行优化？

重点：一个对象要序列化到磁盘，需要实现Serializable接口



二、邮箱服务器
1．邮箱服务器的基本概念
邮件的客户端：可以只安装在电脑上的也可以是网页形式的
邮件服务器：起到邮件的接受与推送的作用
邮件发送的协议：
协议：就是数据传输的约束
接受邮件的协议：POP3   IMAP
发送邮件的协议：SMTP






















